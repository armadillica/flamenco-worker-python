#!/bin/bash
### BEGIN INIT INFO
# Provides:          flamenco-worker
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Flamenco Worker
# Description:       https://flamenco.io/
### END INIT INFO

# This is the SysV init script for Flamenco Worker.
# Place it in /etc/init.d
# Author: Sybren A. St√ºvel <sybren@blender.studio>

FLAMENCO_WORKER=/shared/bin/flamenco-worker/flamenco-worker
WORK_DIR=$(dirname $FLAMENCO_WORKER)

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Flamenco Worker"
NAME=flamenco-worker
DAEMON=$FLAMENCO_WORKER
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/home/guest/local-flamenco-worker/$NAME.pid
USER=guest
GROUP=guest

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


do_start()
{
    sudo -u $USER mkdir -p /home/guest/local-flamenco-worker
    start-stop-daemon --start --quiet --pidfile $PIDFILE --name $NAME \
        --exec $DAEMON --chuid $USER:$GROUP --chdir $WORK_DIR --background
    return "$?"
}

do_stop()
{
    start-stop-daemon --stop --quiet --pidfile $PIDFILE --name $NAME \
        --retry=TERM/30/KILL/5
    return "$?"
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
        0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
        2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
        0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
        2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
    ;;
  restart|force-reload)
    #
    # If the "reload" option is implemented then remove the
    # 'force-reload' alias
    #
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
      *)
        # Failed to stop
        log_end_msg 1
        ;;
    esac
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac

